import{t as J,a as g,b as M}from"../chunks/DV0htR0b.js";import{i as G}from"../chunks/DvLNuc85.js";import{q as K,r as O,b as s,v as Q,w as r,i as t,m as p,x as i,y as o,z}from"../chunks/DCkLJiGP.js";import{e as W,s as X}from"../chunks/DeRr3rea.js";import{i as H,b as Y}from"../chunks/Bug4azAl.js";import{b,r as h}from"../chunks/yRR4lMfm.js";import{o as Z}from"../chunks/DzGvXcqd.js";import{g as $}from"../chunks/DeUlJPgJ.js";var I=J('<p class="error-message svelte-1lp09ig"> </p>'),ee=J('<div class="auth-page-container svelte-1lp09ig"><div class="auth-box svelte-1lp09ig"><header class="auth-header svelte-1lp09ig">회원가입</header> <form class="auth-form svelte-1lp09ig"><div class="form-group svelte-1lp09ig"><label for="email" class="svelte-1lp09ig">이메일</label> <input type="email" id="email" required placeholder="your@email.com" class="svelte-1lp09ig"></div> <div class="form-group svelte-1lp09ig"><label for="username" class="svelte-1lp09ig">사용자 이름</label> <input type="text" id="username" required placeholder="공백 없이 입력" class="svelte-1lp09ig"></div> <div class="form-group svelte-1lp09ig"><label for="password" class="svelte-1lp09ig">비밀번호</label> <input type="password" id="password" required placeholder="6자 이상" class="svelte-1lp09ig"></div> <div class="form-group svelte-1lp09ig"><label for="confirmPassword" class="svelte-1lp09ig">비밀번호 확인</label> <input type="password" id="confirmPassword" required placeholder="비밀번호 다시 입력" class="svelte-1lp09ig"></div> <!> <button type="submit" class="submit-button svelte-1lp09ig"><!></button></form> <div class="link-section svelte-1lp09ig">이미 계정이 있으신가요? <a href="/login" class="svelte-1lp09ig">로그인</a></div></div> <footer class="auth-footer svelte-1lp09ig">Velt Chat - 계정 생성</footer></div>');function ve(L,N){K(N,!1);let v=p(""),d=p(""),n=p(""),u=p(""),l=p(""),m=p(!1),_=p();const R=/^[^\s@]+@[^\s@]+\.[^\s@]+$/;async function U(e){if(e.preventDefault(),!s(v)||!s(d)||!s(n)||!s(u)){t(l,"모든 필드를 입력해주세요.");return}if(s(d).includes(" ")){t(l,"사용자 이름에는 공백을 포함할 수 없습니다.");return}if(!R.test(s(v))){t(l,"유효한 이메일 주소를 입력해주세요.");return}if(s(n)!==s(u)){t(l,"비밀번호가 일치하지 않습니다.");return}if(s(n).length<6){t(l,"비밀번호는 6자 이상이어야 합니다.");return}t(l,""),t(m,!0);try{const a=await fetch("/api/users/",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:s(v),username:s(d),password:s(n)})});if(!a.ok){let f={detail:"알 수 없는 오류가 발생했습니다."};try{f=await a.json()}catch{}throw new Error(f.detail||`HTTP error! status: ${a.status}`)}await $("/login?signedUp=true")}catch(a){console.error("Signup failed:",a),t(l,a.message||"회원가입 중 오류가 발생했습니다.")}finally{t(m,!1)}}Z(()=>{const e=s(_).querySelector("input");e==null||e.focus()}),G();var w=ee(),T=i(w),c=r(i(T),2),y=i(c),j=r(i(y),2);h(j),o(y);var x=r(y,2),k=r(i(x),2);h(k),o(x);var q=r(x,2),E=r(i(q),2);h(E),o(q);var P=r(q,2),C=r(i(P),2);h(C),o(P);var D=r(P,2);{var V=e=>{var a=I(),f=i(a,!0);o(a),O(()=>X(f,s(l))),g(e,a)};H(D,e=>{s(l)&&e(V)})}var S=r(D,2),A=i(S);{var B=e=>{var a=M("처리 중...");g(e,a)},F=e=>{var a=M("가입하기");g(e,a)};H(A,e=>{s(m)?e(B):e(F,!1)})}o(S),o(c),Y(c,e=>t(_,e),()=>s(_)),z(2),o(T),z(2),o(w),O(()=>S.disabled=s(m)),b(j,()=>s(v),e=>t(v,e)),b(k,()=>s(d),e=>t(d,e)),b(E,()=>s(n),e=>t(n,e)),b(C,()=>s(u),e=>t(u,e)),W("submit",c,U),g(L,w),Q()}export{ve as component};
